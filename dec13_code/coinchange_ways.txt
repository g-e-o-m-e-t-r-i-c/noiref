c[] stores the coin 'values'
f(v, i):
	number of ways to make v
	using only coins 0 .. i
	
f(v, i):
	f(v-c[i], i)
+	f(v-c[i-1], i-1)
+ 	f(v-c[i-2], i-2)
	...


Base Case: (in this order)
v == 0: 1 //1 way to form $0
v < 0: 0 //Not possible for neg
i < 0: 0 //No more coins left


int recur(int v, int i) {
	if (v == 0) return 1;
	if (v < 0 || i < 0) return 0;
	if (memo[v][i] != -1) return memo[v][i];
	memo[v][i] = 0;
	for (int k = 0; k <= i; ++k) {
		memo[v][i] += recur(v-c[i-k], i-k);
	}
	return memo[v][i];
}

printf("%d\n", recur(99, 6));

